{"ast":null,"code":"export const FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\nexport const fetchPosts = () => dispatch => {\n  dispatch({\n    type: FETCH_POSTS_REQUEST\n  });\n  fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => {\n    dispatch({\n      type: FETCH_POSTS_SUCCESS,\n      payload: {\n        posts\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: FETCH_POSTS_ERROR,\n      error: error.toString()\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/migue/Desktop/react-prueba/src/redux/actions/postActions.js"],"names":["FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","fetchPosts","dispatch","type","fetch","then","res","json","posts","payload","catch","error","toString"],"mappings":"AAEA,OAAO,MAAMA,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAD,IAAc;AAE5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEAM,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,KAAK,IAAI;AACbN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPU,MAAAA,OAAO,EAAE;AACPD,QAAAA;AADO;AAFF,KAAD,CAAR;AAMD,GATH,EAUGE,KAVH,CAUSC,KAAK,IAAI;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,iBADC;AAEPW,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN;AAFA,KAAD,CAAR;AAID,GAfH;AAgBD,CApBM","sourcesContent":["\r\n\r\nexport const FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST'\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS'\r\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR'\r\n\r\nexport const fetchPosts = () => (dispatch) => {\r\n\r\n  dispatch({ type: FETCH_POSTS_REQUEST })\r\n\r\n  fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(res => res.json())\r\n    .then(posts => {\r\n      dispatch({\r\n        type: FETCH_POSTS_SUCCESS,\r\n        payload: {\r\n          posts\r\n        }\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: FETCH_POSTS_ERROR,\r\n        error: error.toString()\r\n      })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}